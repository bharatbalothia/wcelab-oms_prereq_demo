MQ Install on RHOS

PREREQS:

	Your local environment Should have:

		a) a git client
		b) https://docs.docker.com/install/linux/docker-ce/ubuntu/
		c) https://cloud.ibm.com/docs/cli?topic=cloud-cli-getting-started
		d) IBM Cloud CLI - https://cloud.ibm.com/docs/container-registry-cli-plugin?topic=container-registry-cli-plugin-containerregcli
		e) Openshift CLI - https://cloud.ibm.com/docs/openshift?topic=openshift-openshift-cli
			(we'll be concentrating here today...)

		1) An openshift project
		2) A Security Context within the project

Helpful links to get started:

	RHOS CLI Reference

		https://docs.openshift.com/container-platform/3.11/cli_reference/basic_cli_operations.html

	Understandng Security Context in RHOS

		https://developers.redhat.com/blog/2016/10/21/understanding-openshift-security-context-constraints/
		https://docs.openshift.com/container-platform/3.9/admin_guide/manage_scc.html

	Understaning RHOS Compute Measures

		https://docs.openshift.com/enterprise/3.1/dev_guide/compute_resources.html#compute-resource-units

1) https://github.com/IBM/charts/tree/master/stable/ibm-db2oltp-dev

	Login and Clone repo 

	I use a shared folder between VM and host where I keep my repos. For demo, I created seperate directories to keep structures independent and simple.

2) Edit the values.yaml for DB2

	What did I edit?

	- Ports, if needed
	- queueManager
	- secretName
	- adminPasswordKey
	- dataVolume: storageClassName, size
	- resources: requests: memory, cpu

3) Create Service account and add policy and adm policy to project

	oc create sa mq-sa

	oc policy add-role-to-group system:image-puller system:serviceaccounts:mq-sa -n mq-demo

	oc adm policy add-scc-to-user ibm-mq-dev-scc  "system:serviceaccount:mq-demo:mq-sa"

4) Helm install the DB2 StatefulSet

	##helm install --namespace <OS_PROJECTNAME> --tiller-namespace tiller --name <RELEASE_NAME>  -f <PATH_TO>/ibm-db2oltp-dev/values.yaml ./helm-charts/ibm-db2oltp-dev

	helm install --namespace mq-demo --tiller-namespace tiller --name mq-demo01 -f ./ibm-mqadvanced-server-dev/values.yaml ./ibm-mqadvanced-server-dev

5) Create Route

	svc -> Create Route
		Secure Route
		Passthrough     	